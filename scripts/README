Step 1: spending_cleaning.ipynb
All the code here needs to be run first. This is the data cleaning step and should be the first step in cleaning the spending data and combining it. Once this script is completed, we can move on to the data processing steps.

Step 2: data_reading.py
This is the second script to run after spending_cleaning.ipynb has finished executing. This script handles the assignment of districts and correct values.

Step 3: data_linking_spending_plus_politicians.py
This is the third script to run after data_reading.py has been completed. This script links everything together to generate the full dataset of 13 million records used in the dashboard.

We are linking updated_spending_with_districts.csv and all_politicians.csv so we can attach the names and data of the politicians to the spending data. This allows us to analyze which politicians are associated with the most spending, which parties are responsible for the most pending funds, etc.

Step 4: merged_clean_up.py
This script is the second-to-last to run (step 4). It assigns all unassigned or unknown values separately.
The purpose of this is to split unknown or out-of-state data from other values, so when more data becomes available, it can be handled in more detail.

Step 5: splits_merged.py
This is the final script to run, once all the data has been correctly assigned and cleaned. It splits everything based on the current data.
However, the code may need to be modified depending on your PC's memory, as errors can occur if memory is low. If that happens, the script may need to be rerun to ensure all rows are processed.
